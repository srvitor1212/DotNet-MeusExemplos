// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(MeuContext))]
    [Migration("20241010015154_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.MuitosPraMuitos.CarroMotorista", b =>
                {
                    b.Property<Guid>("CarroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("CarroId", "MotoristaId");

                    b.HasIndex("MotoristaId");

                    b.ToTable("CarroMotorista");
                });

            modelBuilder.Entity("Domain.Model.MuitosPraMuitos.Motorista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacaoCarteiraMotorista")
                        .HasColumnType("int");

                    b.Property<int>("TipoCarteira")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("Domain.Model.UmPraMuitos.Fabricante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("Domain.Model.UmPraUm.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("FabricanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Carro");
                });

            modelBuilder.Entity("Domain.Model.UmPraUm.Chassi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DataAtualizacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("NumeroDeSerie")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CarroId")
                        .IsUnique();

                    b.ToTable("Chassi");
                });

            modelBuilder.Entity("Domain.Model.MuitosPraMuitos.CarroMotorista", b =>
                {
                    b.HasOne("Domain.Model.UmPraUm.Carro", "Carro")
                        .WithMany("CarroMotorista")
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Model.MuitosPraMuitos.Motorista", "Motorista")
                        .WithMany("CarroMotorista")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("Domain.Model.UmPraUm.Carro", b =>
                {
                    b.HasOne("Domain.Model.UmPraMuitos.Fabricante", "Fabricante")
                        .WithMany("Carros")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("Domain.Model.UmPraUm.Chassi", b =>
                {
                    b.HasOne("Domain.Model.UmPraUm.Carro", "Carro")
                        .WithOne("Chassi")
                        .HasForeignKey("Domain.Model.UmPraUm.Chassi", "CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");
                });

            modelBuilder.Entity("Domain.Model.MuitosPraMuitos.Motorista", b =>
                {
                    b.Navigation("CarroMotorista");
                });

            modelBuilder.Entity("Domain.Model.UmPraMuitos.Fabricante", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("Domain.Model.UmPraUm.Carro", b =>
                {
                    b.Navigation("CarroMotorista");

                    b.Navigation("Chassi")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
